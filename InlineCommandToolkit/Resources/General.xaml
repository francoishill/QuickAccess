<ResourceDictionary x:Class='SharedClasses.GeneralResourceDictionary'
					xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:local='clr-namespace:SharedClasses'
					xmlns:SharedClasses='clr-namespace:SharedClasses'
					xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
					xmlns:input="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit">
	<!--xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell"-->
	<ResourceDictionary.MergedDictionaries>
		<!--<ResourceDictionary Source='pack://application:,,,/InlineCommandToolkit;component/Resources/GlassStyle.xaml' />-->
		<ResourceDictionary Source='pack://application:,,,/InlineCommandToolkit;component/Resources/DefaultStyle.xaml' />
		<!--Presentation frameworks (will have to move the one level up as there cannot be a ResourceDictionary nested inside another-->
		<ResourceDictionary>
			<!--<ResourceDictionary Source='/PresentationFrameawork.Aero,Version=3.0.0.0,Culture=neutral,PublicKeyToken=31bf3856ad364e35,ProcessorArchitecture=MSIL;component/themes/aero.normalcolor.xaml' />-->
			<!--<ResourceDictionary Source='/PresentationFramework.Classic,Version=3.0.0.0,Culture=neutral,PublicKeyToken=31bf3856ad364e35;component/themes/Classic.xaml' />-->
			<!--<ResourceDictionary Source='/PresentationFramework.Royale,Version=3.0.0.0,Culture=neutral,PublicKeyToken=31bf3856ad364e35;component/themes/royale.normalcolor.xaml' />-->
			<!--<ResourceDictionary Source='/PresentationFramework.Luna,Version=3.0.0.0,Culture=neutral,PublicKeyToken=31bf3856ad364e35;component/themes/luna.homestead.xaml' />-->
			<!--<ResourceDictionary Source='/PresentationFramework.Luna,Version=3.0.0.0,Culture=neutral,PublicKeyToken=31bf3856ad364e35;component/themes/luna.metallic.xaml' />-->
			<!--<ResourceDictionary Source='/PresentationFramework.Luna,Version=3.0.0.0,Culture=neutral,PublicKeyToken=31bf3856ad364e35;component/themes/luna.normalcolor.xaml' />-->
			<!--<ResourceDictionary Source='Themes/Generic.xaml' />-->
		</ResourceDictionary>
		<!--CommentedOut (couple of separate commented out ResourceDictionaries)-->
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<!--Style CommentedOut ScrollViewer and Scrollbars-->
				<ResourceDictionary>
					<!--<Style x:Key="{x:Type ScrollViewer}"
						 TargetType="{x:Type ScrollViewer}">
				<Setter Property="HorizontalScrollBarVisibility"
								Value="Hidden" />
				<Setter Property="VerticalScrollBarVisibility"
								Value="Hidden" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollViewer}">
							<Grid>
								<Grid Background="Transparent">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<ScrollBar x:Name="PART_VerticalScrollBar"
														 Grid.Column="1"
														 Minimum="0.0"
														 Maximum="{TemplateBinding ScrollableHeight}"
														 ViewportSize="{TemplateBinding ViewportHeight}"
														 Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
														 Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
														 Cursor="Arrow"
														 AutomationProperties.AutomationId="VerticalScrollBar" />
									<ScrollBar x:Name="PART_HorizontalScrollBar"
														 Orientation="Horizontal"
														 Grid.Row="1"
														 Minimum="0.0"
														 Maximum="{TemplateBinding ScrollableWidth}"
														 ViewportSize="{TemplateBinding ViewportWidth}"
														 Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
														 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
														 Cursor="Arrow"
														 AutomationProperties.AutomationId="HorizontalScrollBar" />
								</Grid>
								<Grid Background="{TemplateBinding Background}">
									<ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
																					Margin="{TemplateBinding Padding}"
																					Content="{TemplateBinding Content}"
																					ContentTemplate="{TemplateBinding ContentTemplate}"
																					CanContentScroll="{TemplateBinding CanContentScroll}" />
								</Grid>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<Trigger Property="IsEnabled"
									 Value="false">
						<Setter Property="Foreground"
										Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
					</Trigger>
					<Trigger Property="IsMouseOver"
									 Value="true">
						<Setter Property="HorizontalScrollBarVisibility"
										Value="Visible" />
						<Setter Property="VerticalScrollBarVisibility"
										Value="Visible" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="ScrollBarButton"
						 TargetType="{x:Type RepeatButton}">
				<Setter Property="OverridesDefaultStyle"
								Value="true" />
				<Setter Property="Focusable"
								Value="false" />
				<Setter Property="IsTabStop"
								Value="false" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type RepeatButton}">
							<Path x:Name="Arrow"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										Fill="{TemplateBinding Background}" />
							<ControlTemplate.Triggers>
								<Trigger Property="theme:ScrollChrome.ScrollGlyph"
												 Value="UpArrow">
									<Setter TargetName="Arrow"
													Property="Data"
													Value="M 3,0 l 3,8 l -6,0 Z" />
								</Trigger>
								<Trigger Property="theme:ScrollChrome.ScrollGlyph"
												 Value="DownArrow">
									<Setter TargetName="Arrow"
													Property="Data"
													Value="M 0,0 l 6,0 l -3,8 Z" />
								</Trigger>
								<Trigger Property="theme:ScrollChrome.ScrollGlyph"
												 Value="LeftArrow">
									<Setter TargetName="Arrow"
													Property="Data"
													Value="M 0,3 l 8,-3 l 0,6 Z" />
								</Trigger>
								<Trigger Property="theme:ScrollChrome.ScrollGlyph"
												 Value="RightArrow">
									<Setter TargetName="Arrow"
													Property="Data"
													Value="M 0,0 l 8,3 l -8,3 Z" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="ScrollBarThumb"
						 TargetType="{x:Type Thumb}">
				<Setter Property="OverridesDefaultStyle"
								Value="true" />
				<Setter Property="IsTabStop"
								Value="false" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Thumb}">
							<Border Background="#FF777777"
											CornerRadius="2" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="HorizontalScrollBarPageButton"
						 TargetType="{x:Type RepeatButton}">
				<Setter Property="OverridesDefaultStyle"
								Value="true" />
				<Setter Property="Background"
								Value="Transparent" />
				<Setter Property="Focusable"
								Value="false" />
				<Setter Property="IsTabStop"
								Value="false" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type RepeatButton}">
							<Rectangle Fill="{TemplateBinding Background}"
												 Width="{TemplateBinding Width}"
												 Height="{TemplateBinding Height}" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="VerticalScrollBarPageButton"
						 TargetType="{x:Type RepeatButton}">
				<Setter Property="OverridesDefaultStyle"
								Value="true" />
				<Setter Property="Background"
								Value="Transparent" />
				<Setter Property="Focusable"
								Value="false" />
				<Setter Property="IsTabStop"
								Value="false" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type RepeatButton}">
							<Rectangle Fill="{TemplateBinding Background}"
												 Width="{TemplateBinding Width}"
												 Height="{TemplateBinding Height}" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="{x:Type ScrollBar}"
						 TargetType="{x:Type ScrollBar}">
				<Setter Property="Background"
								Value="#FF979797" />
				<Setter Property="Stylus.IsPressAndHoldEnabled"
								Value="false" />
				<Setter Property="Stylus.IsFlicksEnabled"
								Value="false" />
				<Setter Property="Foreground"
								Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="Width"
								Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
				<Setter Property="MinWidth"
								Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
				<Setter Property="Margin"
								Value="2" />
				<Setter Property="Width"
								Value="10" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<Border x:Name="Bg"
											CornerRadius="2"
											Margin="2,10"
											Opacity="0.75"
											Background="{TemplateBinding Background}"
											VerticalAlignment="Bottom">
								<Grid SnapsToDevicePixels="true">
									<Grid.RowDefinitions>
										<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
										<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
									</Grid.RowDefinitions>
									<RepeatButton Style="{StaticResource ScrollBarButton}"
																Background="#FFCBCBCB"
																IsEnabled="{TemplateBinding IsMouseOver}"
																Command="{x:Static ScrollBar.LineUpCommand}"
																theme:ScrollChrome.ScrollGlyph="UpArrow"
																Margin="0,4" />
									<RepeatButton Style="{StaticResource ScrollBarButton}"
																Background="#FFCBCBCB"
																Grid.Row="1"
																IsEnabled="{TemplateBinding IsMouseOver}"
																Command="{x:Static ScrollBar.LineDownCommand}"
																theme:ScrollChrome.ScrollGlyph="DownArrow"
																Margin="0,4"></RepeatButton>
								</Grid>
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled"
												 Value="false">
									<Setter TargetName="Bg"
													Property="Visibility"
													Value="Hidden" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Style.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsMouseOver"
												 Value="True" />
							<Condition Property="Orientation"
												 Value="Vertical" />
						</MultiTrigger.Conditions>
					</MultiTrigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="Orientation"
												 Value="Horizontal" />
							<Condition Property="IsMouseOver"
												 Value="False" />
						</MultiTrigger.Conditions>
						<Setter Property="Width"
										Value="Auto" />
						<Setter Property="MinWidth"
										Value="0" />
						<Setter Property="Height"
										Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
						<Setter Property="MinHeight"
										Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ScrollBar}">
									<Border x:Name="Bg"
													CornerRadius="2"
													Margin="2"
													Opacity="0.75"
													Background="{TemplateBinding Background}"
													HorizontalAlignment="Right">
										<Grid SnapsToDevicePixels="true">
											<Grid.ColumnDefinitions>
												<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
												<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
											</Grid.ColumnDefinitions>
											<RepeatButton Style="{StaticResource ScrollBarButton}"
																		Background="#FFCBCBCB"
																		IsEnabled="{TemplateBinding IsMouseOver}"
																		Command="{x:Static ScrollBar.LineLeftCommand}"
																		theme:ScrollChrome.ScrollGlyph="LeftArrow"
																		Margin="4,0" />
											<RepeatButton Style="{StaticResource ScrollBarButton}"
																		Background="#FFCBCBCB"
																		Grid.Column="1"
																		IsEnabled="{TemplateBinding IsMouseOver}"
																		Command="{x:Static ScrollBar.LineRightCommand}"
																		theme:ScrollChrome.ScrollGlyph="RightArrow"
																		Margin="4,0" />
										</Grid>
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsEnabled"
														 Value="false">
											<Setter TargetName="Bg"
															Property="Visibility"
															Value="Hidden" />
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</MultiTrigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsMouseOver"
												 Value="True" />
							<Condition Property="Orientation"
												 Value="Horizontal" />
						</MultiTrigger.Conditions>
						<Setter Property="Width"
										Value="Auto" />
						<Setter Property="MinWidth"
										Value="0" />
						<Setter Property="Height"
										Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
						<Setter Property="MinHeight"
										Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
						<Setter Property="Height"
										Value="30" />
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ScrollBar}">
									<Border CornerRadius="4"
													Margin="2"
													Opacity="0.75"
													Background="{TemplateBinding Background}">
										<Grid SnapsToDevicePixels="true">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="0.00001*" />
												<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
												<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
											</Grid.ColumnDefinitions>
											<Track x:Name="PART_Track"
														 IsEnabled="{TemplateBinding IsMouseOver}">
												<Track.DecreaseRepeatButton>
													<RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
																				Command="{x:Static ScrollBar.PageLeftCommand}" />
												</Track.DecreaseRepeatButton>
												<Track.IncreaseRepeatButton>
													<RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
																				Command="{x:Static ScrollBar.PageRightCommand}" />
												</Track.IncreaseRepeatButton>
												<Track.Thumb>
													<Thumb x:Name="Thumb"
																 Style="{StaticResource ScrollBarThumb}"
																 theme:ScrollChrome.ScrollGlyph="HorizontalGripper"
																 Margin="2" />
												</Track.Thumb>
											</Track>
											<RepeatButton Style="{StaticResource ScrollBarButton}"
																		Background="#FFFFFFFF"
																		Grid.Column="1"
																		IsEnabled="{TemplateBinding IsMouseOver}"
																		Command="{x:Static ScrollBar.LineLeftCommand}"
																		theme:ScrollChrome.ScrollGlyph="LeftArrow"
																		RenderTransformOrigin="0.5, 0.5">
												<RepeatButton.RenderTransform>
													<ScaleTransform ScaleX="1.5"
																					ScaleY="1.5" />
												</RepeatButton.RenderTransform>
											</RepeatButton>
											<RepeatButton Style="{StaticResource ScrollBarButton}"
																		Background="#FFFFFFFF"
																		Grid.Column="2"
																		IsEnabled="{TemplateBinding IsMouseOver}"
																		Command="{x:Static ScrollBar.LineRightCommand}"
																		theme:ScrollChrome.ScrollGlyph="RightArrow"
																		RenderTransformOrigin="0.5, 0.5">
												<RepeatButton.RenderTransform>
													<ScaleTransform ScaleX="1.5"
																					ScaleY="1.5" />
												</RepeatButton.RenderTransform>
											</RepeatButton>
										</Grid>
									</Border>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</MultiTrigger>
				</Style.Triggers>
			</Style>-->
				</ResourceDictionary>
				<!--Style AnotherCommentedOut ScrollViewer and Scrollbars-->
				<ResourceDictionary>
					<!--<Style x:Key="{x:Type ScrollBar}"
						 TargetType="{x:Type ScrollBar}">
				<Style.Triggers>
					<Trigger Property="IsMouseOver"
									 Value="True">
						<Setter Property="Opacity"
										Value="0.9" />
					</Trigger>
					<Trigger Property="IsMouseOver"
									 Value="False">
						<Setter Property="Opacity"
										Value="0.4" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="{x:Type ScrollViewer}"
						 TargetType="{x:Type ScrollViewer}">
				<Setter Property="OverridesDefaultStyle"
								Value="True" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollViewer}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="*" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<ScrollContentPresenter Grid.ColumnSpan="2"
																				Grid.RowSpan="2" />
								<ScrollBar Name="PART_VerticalScrollBar"
													 Grid.Column="1"
													 Value="{TemplateBinding VerticalOffset}"
													 Maximum="{TemplateBinding ScrollableHeight}"
													 ViewportSize="{TemplateBinding ViewportHeight}"
													 Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
								<ScrollBar Name="PART_HorizontalScrollBar"
													 Orientation="Horizontal"
													 Grid.Row="1"
													 Value="{TemplateBinding HorizontalOffset}"
													 Maximum="{TemplateBinding ScrollableWidth}"
													 ViewportSize="{TemplateBinding ViewportWidth}"
													 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>-->
				</ResourceDictionary>
				<!--Style CommentedOut (previous style for AutoCompleteBox_InlineCommands-->
				<ResourceDictionary>
					<!--<Style x:Key='AutoCompleteBox_InlineCommands'
						 TargetType="{x:Type input:AutoCompleteBox}">
				<Setter Property="IsTabStop"
								Value="False" />
				<Setter Property="Padding"
								Value="2" />
				<Setter Property="BorderThickness"
								Value="1" />
				<Setter Property="BorderBrush">
					<Setter.Value>
						<LinearGradientBrush EndPoint="0.5,1"
																 StartPoint="0.5,0">
							<GradientStop Color="#FFA3AEB9"
														Offset="0" />
							<GradientStop Color="#FF8399A9"
														Offset="0.375" />
							<GradientStop Color="#FF718597"
														Offset="0.375" />
							<GradientStop Color="#FF617584"
														Offset="1" />
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Background"
								Value="#FFFFFFFF" />
				<Setter Property="Foreground"
								Value="#FF000000" />
				<Setter Property="MinWidth"
								Value="45" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type input:AutoCompleteBox}">
							<Grid Opacity="{TemplateBinding Opacity}">
								<TextBox Padding="{TemplateBinding Padding}"
												 Background="{TemplateBinding Background}"
												 IsTabStop="True"
												 x:Name="Text"
												 Text='{Binding CurrentValue}'
												 HorizontalContentAlignment='Center'
												 HorizontalScrollBarVisibility='Auto'
												 Style="{TemplateBinding TextBoxStyle}"
												 BorderThickness="{TemplateBinding BorderThickness}"
												 Foreground="{TemplateBinding Foreground}"
												 Margin="0"
												 ContextMenuOpening='AutoCompleteActualTextBox_ContextMenuOpening'
												 PreviewKeyDown='AutoCompleteActualTextBox_PreviewKeyDown'>
									<TextBox.ContextMenu>
										<ContextMenu Background="White">
											<MenuItem Command="ApplicationCommands.Copy" />
											<MenuItem Command="ApplicationCommands.Cut" />
											<MenuItem Command="ApplicationCommands.Paste" />
										</ContextMenu>
									</TextBox.ContextMenu>
									<TextBox.Template>
										<ControlTemplate>
											<Border Background='White'
															CornerRadius='3'
															BorderThickness='1'>
												<Border.Resources>
													<Style TargetType='{x:Type TextBlock}'>
														<Style.Triggers>
															<Trigger Property='IsMouseOver'
																			 Value='True'>
																<Setter Property='Background'
																				Value='#ddd' />
																<Setter Property='Foreground'
																				Value='#000' />
															</Trigger>
															<Trigger Property='IsMouseOver'
																			 Value='False'>
																<Setter Property='Foreground'
																				Value='#bbb' />
															</Trigger>
														</Style.Triggers>
													</Style>
												</Border.Resources>
												<DockPanel LastChildFill='True'>
													<Border x:Name='ClearTextboxTextButton'
																	DockPanel.Dock='Right'
																	MouseLeftButtonDown='ClearTextboxTextButton_MouseLeftButtonDown'
																	BorderThickness='0'
																	Background='Transparent'>
														<TextBlock Padding='3,0'>x</TextBlock>
													</Border>
													<TextBox x:Name='TextBoxWithText'
																	 DockPanel.Dock='Left'
																	 Background='Transparent'
																	 BorderBrush='Transparent'
																	 BorderThickness='0'
																	 Text='{Binding CurrentValue, UpdateSourceTrigger=PropertyChanged}'
																	 LostFocus='TextBoxWithText_LostFocus'
																	 GotFocus='TextBoxWithText_GotFocus' />
												</DockPanel>
											</Border>
											<ControlTemplate.Triggers>
												<Trigger Property="IsFocused"
																 Value="True">
													<Setter TargetName="TextBoxWithText"
																	Property="FocusManager.FocusedElement"
																	Value="{Binding ElementName=TextBoxWithText}" />
												</Trigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</TextBox.Template>
								</TextBox>
								<Border x:Name="ValidationErrorElement"
												Visibility="Collapsed"
												BorderBrush="#FFDB000C"
												BorderThickness="1"
												CornerRadius="1">
									<ToolTipService.ToolTip>
										<ToolTip x:Name="validationTooltip"
														 DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
														 Template="{StaticResource CommonValidationToolTipTemplate}"
														 Placement="Right"
														 PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
											<ToolTip.Triggers>
												<EventTrigger RoutedEvent="Canvas.Loaded">
													<BeginStoryboard>
														<Storyboard>
															<ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip"
																														 Storyboard.TargetProperty="IsHitTestVisible">
																<DiscreteObjectKeyFrame KeyTime="0">
																	<DiscreteObjectKeyFrame.Value>
																		<system:Boolean>true</system:Boolean>
																	</DiscreteObjectKeyFrame.Value>
																</DiscreteObjectKeyFrame>
															</ObjectAnimationUsingKeyFrames>
														</Storyboard>
													</BeginStoryboard>
												</EventTrigger>
											</ToolTip.Triggers>
										</ToolTip>
									</ToolTipService.ToolTip>
									<Grid Height="12"
												HorizontalAlignment="Right"
												Margin="1,-4,-4,0"
												VerticalAlignment="Top"
												Width="12"
												Background="Transparent">
										<Path Fill="#FFDC000C"
													Margin="1,3,0,0"
													Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" />
										<Path Fill="#ffffff"
													Margin="1,3,0,0"
													Data="M 0,0 L2,0 L 8,6 L8,8" />
									</Grid>
								</Border>
								<Popup x:Name="Popup"
											 Width='Auto'
											 VerticalOffset='1'
											 AllowsTransparency='True'
											 Opened='Popup_Opened'
											 Closed='Popup_Closed'>
									<Border CornerRadius='3'
													BorderBrush='#aaa'
													BorderThickness='1'
													Padding='3'
													Background='#fff'>
										<ListBox x:Name="Selector"
														 ScrollViewer.HorizontalScrollBarVisibility="Auto"
														 ScrollViewer.VerticalScrollBarVisibility="Auto"
														 ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
														 Background="{TemplateBinding Background}"
														 Foreground="#579"
														 BorderThickness="0"
														 ItemTemplate='{TemplateBinding ItemTemplate}'></ListBox>
									</Border>
								</Popup>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled"
												 Value="False">
									<Setter Property="Background"
													Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
									<Setter Property="Foreground"
													Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
								</Trigger>
								<Trigger Property="IsFocused"
												 Value="True">
									<Setter Property="BorderBrush"
													Value="#0BF" />
								</Trigger>
								<Trigger Property="Width"
												 Value="Auto">
									<Setter Property="MinWidth"
													Value="100" />
								</Trigger>
								<Trigger Property="Height"
												 Value="Auto">
									<Setter Property="MinHeight"
													Value="20" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>-->
				</ResourceDictionary>
				<!--Style AnotherCommentedOut (previous style for AutoCompleteBox_InlineCommands-->
				<ResourceDictionary>
					<!--<Style x:Key="autoCompleteTextBox"
						 TargetType="{x:Type TextBox}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TextBoxBase}">
							<Border BorderBrush='#888'
											BorderThickness='1'
											CornerRadius='3'>
								<Grid x:Name="root">
									<ScrollViewer Margin="0"
																x:Name="PART_ContentHost" />
									<Popup x:Name="PART_Popup"
												 AllowsTransparency="true"
												 Placement="Bottom"
												 IsOpen="False"
												 PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
										<ListBox x:Name="PART_ItemList"
														 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
														 VerticalContentAlignment="Stretch"
														 HorizontalContentAlignment="Stretch"
														 KeyboardNavigation.DirectionalNavigation="Contained" />
									</Popup>
								</Grid>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>-->
				</ResourceDictionary>
				<!--Styles CommentedOut (some HighlightBrushKey values for ListBox and ListBoxItem-->
				<ResourceDictionary>
					<!--<Style TargetType="{x:Type ListBoxItem}">
						<Style.Resources>
							<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
															 Color="Transparent" />
							<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
															 Color="Transparent" />
						</Style.Resources>
					</Style>
					<Style TargetType="{x:Type ListBox}">
						<Style.Resources>
							<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
															 Color="Transparent" />
							<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
															 Color="Transparent" />
						</Style.Resources>
					</Style>-->
				</ResourceDictionary>
				<!--Styles CommentedOut (some Button styles (think they were used for the hide/close button on the CommandsUsercontrol), NOT really sure whether they're used)-->
				<ResourceDictionary>
					<!--<Style x:Key="BaseButtonStyle"
						 TargetType="{x:Type ButtonBase}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ButtonBase}">
							<theme:ButtonChrome x:Name="Chrome"
																	Background="{TemplateBinding Background}"
																	BorderBrush="{TemplateBinding BorderBrush}"
																	RenderDefaulted="{TemplateBinding Button.IsDefaulted}"
																	RenderMouseOver="{TemplateBinding IsMouseOver}"
																	RenderPressed="{TemplateBinding IsPressed}"
																	SnapsToDevicePixels="true">
								<ContentPresenter Margin="{TemplateBinding Padding}"
																	VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
																	HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																	RecognizesAccessKey="True"
																	SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</theme:ButtonChrome>
							<ControlTemplate.Triggers>
								<Trigger Property="IsKeyboardFocused"
												 Value="true">
									<Setter TargetName="Chrome"
													Property="RenderDefaulted"
													Value="true" />
								</Trigger>
								<Trigger Property="ToggleButton.IsChecked"
												 Value="true">
									<Setter TargetName="Chrome"
													Property="RenderPressed"
													Value="true" />
								</Trigger>
								<Trigger Property="IsEnabled"
												 Value="false">
									<Setter Property="Foreground"
													Value="#ADADAD" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="{x:Type ToggleButton}"
						 BasedOn="{StaticResource BaseButtonStyle}"
						 TargetType="{x:Type ToggleButton}" />
			<Style x:Key="{x:Type RepeatButton}"
						 BasedOn="{StaticResource BaseButtonStyle}"
						 TargetType="{x:Type RepeatButton}" />
			<Style x:Key="{x:Type Button}"
						 BasedOn="{StaticResource BaseButtonStyle}"
						 TargetType="{x:Type Button}" />-->
				</ResourceDictionary>
			</ResourceDictionary.MergedDictionaries>
		</ResourceDictionary>
		<!--Brushes-->
		<ResourceDictionary>
			<LinearGradientBrush x:Key='EmbeddedButtonBackgroundBrush'
								 StartPoint="0,0"
								 EndPoint="0,1">
				<GradientStop Color="#fff"
							  Offset="0" />
				<GradientStop Color="#eee"
							  Offset="0.7" />
				<GradientStop Color="#f0f0f0"
							  Offset="1" />
			</LinearGradientBrush>
			<LinearGradientBrush x:Key='CommandListBoxItemMainBorderBackgroundBrush'
								 StartPoint="0,0"
								 EndPoint="0,1">
				<GradientStop Color="#456"
							  Offset="0" />
				<GradientStop Color="#345"
							  Offset="0.7" />
				<GradientStop Color="#405060"
							  Offset="1" />
			</LinearGradientBrush>
		</ResourceDictionary>
		<!--Colors (some extra ones, not sure if they're used)-->
		<ResourceDictionary>
			<!--Control colors.-->
			<Color x:Key="WindowColor">#FFE8EDF9</Color>
			<Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
			<Color x:Key="ContentAreaColorDark">#FF7381F9</Color>
			<Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
			<Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
			<Color x:Key="DisabledForegroundColor">#FF888888</Color>
			<Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
			<Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>
			<Color x:Key="ControlLightColor">White</Color>
			<Color x:Key="ControlMediumColor">#FF7381F9</Color>
			<Color x:Key="ControlDarkColor">#FF211AA9</Color>
			<!--<Color x:Key="ControlMouseOverColor">#FF3843C4</Color>-->
			<Color x:Key="ControlMouseOverColor">#ddd</Color>
			<!--<Color x:Key="ControlPressedColor">#FF211AA9</Color>-->
			<Color x:Key="ControlPressedColor">#999</Color>
			<Color x:Key="GlyphColor">#FF444444</Color>
			<Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>
			<!--Border colors-->
			<Color x:Key="BorderLightColor">Transparent</Color>
			<!--<Color x:Key="BorderLightColor">#FFCCCCCC</Color>-->
			<Color x:Key="BorderMediumColor">#FF888888</Color>
			<!--<Color x:Key="BorderDarkColor">#FF444444</Color>-->
			<Color x:Key="BorderDarkColor">Transparent</Color>
			<Color x:Key="PressedBorderLightColor">#FF888888</Color>
			<Color x:Key="PressedBorderDarkColor">#FF444444</Color>
			<Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
			<Color x:Key="DisabledBorderDarkColor">#FF888888</Color>
			<Color x:Key="DefaultBorderBrushDarkColor">Black</Color>
			<!--Control-specific resources.-->
			<Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
			<Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
			<Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>
			<Color x:Key="NavButtonFrameColor">#FF3843C4</Color>
			<LinearGradientBrush x:Key="MenuPopupBrush"
								 EndPoint="0.5,1"
								 StartPoint="0.5,0">
				<GradientStop Color="{DynamicResource ControlLightColor}"
							  Offset="0" />
				<GradientStop Color="{DynamicResource ControlMediumColor}"
							  Offset="0.5" />
				<GradientStop Color="{DynamicResource ControlLightColor}"
							  Offset="1" />
			</LinearGradientBrush>
			<LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
								 StartPoint="0,0"
								 EndPoint="1,0">
				<LinearGradientBrush.GradientStops>
					<GradientStopCollection>
						<GradientStop Color="#000000FF"
									  Offset="0" />
						<GradientStop Color="#600000FF"
									  Offset="0.4" />
						<GradientStop Color="#600000FF"
									  Offset="0.6" />
						<GradientStop Color="#000000FF"
									  Offset="1" />
					</GradientStopCollection>
				</LinearGradientBrush.GradientStops>
			</LinearGradientBrush>
		</ResourceDictionary>
		<!--Converters-->
		<ResourceDictionary>
			<SharedClasses:ZeroCollapsedNonZeroVisibleConverter x:Key="zeroCollapsedNonZeroVisibleConverter" />
			<SharedClasses:NumberUnreadItemsToTextConverter x:Key='numberUnreadItemsToTextConverter' />
			<SharedClasses:UnreadItemsStartVisibilityConverter x:Key='unreadItemsStartVisibilityConverter' />
		</ResourceDictionary>
		<!--Storyboards-->
		<ResourceDictionary>
			<Storyboard x:Key="RotateAway"
						AccelerationRatio="0.3"
						DecelerationRatio="0.3">
				<Rotation3DAnimationUsingKeyFrames BeginTime="00:00:00"
												   Storyboard.TargetProperty="(ModelVisual3D.Transform).(Transform3DGroup.Children)[2].(RotateTransform3D.Rotation)"
												   Storyboard.TargetName="ModelVisual3D">
					<SplineRotation3DKeyFrame KeySpline="0.5,0.5,0.5,0.5"
											  KeyTime="00:00:00.5">
						<SplineRotation3DKeyFrame.Value>
							<AxisAngleRotation3D Angle="75"
												 Axis="0,1,0" />
						</SplineRotation3DKeyFrame.Value>
					</SplineRotation3DKeyFrame>
				</Rotation3DAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
											   Storyboard.TargetProperty="(ModelVisual3D.Transform).(Transform3DGroup.Children)[4].(TranslateTransform3D.OffsetX)"
											   Storyboard.TargetName="ModelVisual3D">
					<SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,0.5"
										  Value="-0.35"
										  KeyTime="00:00:0.5" />
				</DoubleAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
											   Storyboard.TargetProperty="(UIElement.Opacity)"
											   Storyboard.TargetName="ZAM3DViewport3D">
					<SplineDoubleKeyFrame KeySpline="0.5,0.5,0.5,0.5"
										  Value="0.4"
										  KeyTime="00:00:00.5000000" />
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
		</ResourceDictionary>
		<!--Styles WindowChrome-->
		<ResourceDictionary>
			<Style x:Key='ButtonStyleSemiTransparentUntilHover'
				   TargetType="{x:Type Button}">
				<Setter Property="Opacity"
						Value="0.1" />
				<Style.Triggers>
					<Trigger Property="IsMouseOver"
							 Value="True">
						<Setter Property="Button.Opacity"
								Value="1" />
					</Trigger>
				</Style.Triggers>
			</Style>
			<Style x:Key="FractalStyle"
				   TargetType="{x:Type local:CommandsWindow}">
				<!--<Setter Property="shell:WindowChrome.WindowChrome">
					<Setter.Value>
						<shell:WindowChrome GlassFrameThickness="8"
											ResizeBorderThickness="4"
											CaptionHeight="28"
											CornerRadius="10" />
					</Setter.Value>
				</Setter>-->
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type local:CommandsWindow}">
							<Border Background='White'
									Margin='8'>
								<DockPanel LastChildFill='True'>
									<Grid DockPanel.Dock="Top"
										  Background='White'>
										<StackPanel Orientation='Horizontal'
													HorizontalAlignment='Right'
													VerticalAlignment='Top'
													Margin='3'>
											<Button x:Name='MinimizeToTrayUsercontrolButton'
													Style='{StaticResource ButtonStyleSemiTransparentUntilHover}'
													ToolTip='Minimize to tray'
													HorizontalAlignment='Right'
													VerticalAlignment='Top'
													Margin='0,0,3,0'
													BorderBrush='#ddd'
													BorderThickness='1'
													Background='Transparent'
													Foreground='#777'
													Padding='3,0'
													Content='_' />
											<Button x:Name='CloseUsercontrolButton'
													Style='{StaticResource ButtonStyleSemiTransparentUntilHover}'
													ToolTip='Quit Quick Access'
													HorizontalAlignment='Right'
													VerticalAlignment='Top'
													BorderBrush='#ddd'
													BorderThickness='1'
													Background='Transparent'
													Foreground='#777'
													Padding='3,0'
													Content='X' />
										</StackPanel>
										<Grid HorizontalAlignment="Center">
											<TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}"
													   Foreground="#777"
													   FontFamily="Segoe UI"
													   FontSize="14" />
										</Grid>
									</Grid>
									<ContentPresenter Content="{TemplateBinding Content}"
													  DockPanel.Dock="Bottom" />
								</DockPanel>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
		<!--DrawingImages (TaskBarItem)-->
		<ResourceDictionary>
			<DrawingImage x:Key="Button1Image">
				<DrawingImage.Drawing>
					<DrawingGroup>
						<DrawingGroup.Children>
							<GeometryDrawing Brush="Red">
								<GeometryDrawing.Geometry>
									<RectangleGeometry Rect="0 0 24 24"
													   RadiusX="4"
													   RadiusY="4" />
								</GeometryDrawing.Geometry>
							</GeometryDrawing>
						</DrawingGroup.Children>
					</DrawingGroup>
				</DrawingImage.Drawing>
			</DrawingImage>
			<DrawingImage x:Key="Button2Image">
				<DrawingImage.Drawing>
					<DrawingGroup>
						<DrawingGroup.Children>
							<GeometryDrawing Brush="Green">
								<GeometryDrawing.Geometry>
									<RectangleGeometry Rect="0 0 24 24"
													   RadiusX="4"
													   RadiusY="4" />
								</GeometryDrawing.Geometry>
							</GeometryDrawing>
						</DrawingGroup.Children>
					</DrawingGroup>
				</DrawingImage.Drawing>
			</DrawingImage>
			<DrawingImage x:Key="Button3Image">
				<DrawingImage.Drawing>
					<DrawingGroup>
						<DrawingGroup.Children>
							<GeometryDrawing Brush="Blue">
								<GeometryDrawing.Geometry>
									<RectangleGeometry Rect="0 0 24 24"
													   RadiusX="4"
													   RadiusY="4" />
								</GeometryDrawing.Geometry>
							</GeometryDrawing>
						</DrawingGroup.Children>
					</DrawingGroup>
				</DrawingImage.Drawing>
			</DrawingImage>
		</ResourceDictionary>
		<!--ControlTemplate (with brushes) for commands TreeView and Main commands textbox-->
		<ResourceDictionary>
			<LinearGradientBrush x:Key='HoverBackground'
								 StartPoint='0.5,0'
								 EndPoint='0.5,1'>
				<GradientStop Offset='0'
							  Color='#66bababa' />
				<GradientStop Offset='1'
							  Color='#66707070' />
			</LinearGradientBrush>
			<LinearGradientBrush x:Key='HoverBorderBrush'
								 StartPoint='0.5,0'
								 EndPoint='0.5,1'>
				<GradientStop Offset='0'
							  Color='#bbfafafa' />
				<GradientStop Offset='1'
							  Color='#bb707070' />
			</LinearGradientBrush>
			<LinearGradientBrush x:Key='PressedBackground'
								 StartPoint='0.5,0'
								 EndPoint='0.5,1'>
				<GradientStop Offset='0'
							  Color='#66ffffff' />
				<GradientStop Offset='1'
							  Color='#66dddddd' />
			</LinearGradientBrush>
			<LinearGradientBrush x:Key='PressedBorderBrush'
								 StartPoint='0.5,0'
								 EndPoint='0.5,1'>
				<GradientStop Offset='0'
							  Color='#bbffffff' />
				<GradientStop Offset='1'
							  Color='#bbdddddd' />
			</LinearGradientBrush>
			<ControlTemplate x:Key="CommonValidationToolTipTemplate"
							 TargetType="{x:Type ToolTip}">
				<Grid x:Name="Root"
					  Margin="5,0"
					  RenderTransformOrigin="0,0"
					  Opacity="0">
					<Grid.RenderTransform>
						<TranslateTransform x:Name="Translation"
											X="-25" />
					</Grid.RenderTransform>
					<!--<VisualStateManager.VisualStateGroups>
								<VisualStateGroup Name="OpenStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0" />
										<VisualTransition To="Open"
																			GeneratedDuration="0:0:0.2">
											<Storyboard>
												<DoubleAnimation Storyboard.TargetName="Translation"
																				 Storyboard.TargetProperty="X"
																				 To="0"
																				 Duration="0:0:0.2">
													<DoubleAnimation.EasingFunction>
														<BackEase Amplitude=".3"
																			EasingMode="EaseOut" />
													</DoubleAnimation.EasingFunction>
												</DoubleAnimation>
												<DoubleAnimation Storyboard.TargetName="Root"
																				 Storyboard.TargetProperty="Opacity"
																				 To="1"
																				 Duration="0:0:0.2" />
											</Storyboard>
										</VisualTransition>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Closed">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="Root"
																			 Storyboard.TargetProperty="Opacity"
																			 To="0"
																			 Duration="0" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Open">
										<Storyboard>
											<DoubleAnimation Storyboard.TargetName="Translation"
																			 Storyboard.TargetProperty="X"
																			 To="0"
																			 Duration="0" />
											<DoubleAnimation Storyboard.TargetName="Root"
																			 Storyboard.TargetProperty="Opacity"
																			 To="1"
																			 Duration="0" />
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>-->
					<Border Margin="4,4,-4,-4"
							Background="#052A2E31"
							CornerRadius="5" />
					<Border Margin="3,3,-3,-3"
							Background="#152A2E31"
							CornerRadius="4" />
					<Border Margin="2,2,-2,-2"
							Background="#252A2E31"
							CornerRadius="3" />
					<Border Margin="1,1,-1,-1"
							Background="#352A2E31"
							CornerRadius="2" />
					<Border Background="#FFDC000C"
							CornerRadius="2">
						<TextBlock UseLayoutRounding="false"
								   Foreground="White"
								   Margin="8,4,8,4"
								   MaxWidth="250"
								   TextWrapping="Wrap"
								   Text="{Binding (Validation.Errors)[0].ErrorContent}" />
					</Border>
				</Grid>
			</ControlTemplate>
			<ControlTemplate x:Key="TextBoxBaseControlTemplate"
							 TargetType="{x:Type TextBoxBase}">
				<Border Background="{TemplateBinding Background}"
						x:Name="Bd"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="5"
						Padding="2">
					<DockPanel>
						<Border x:Name="EmbeddedButton"
								DockPanel.Dock="Left"
								BorderBrush="#ccc"
								BorderThickness="1"
								CornerRadius="3"
								Padding="3,0,3,3"
								Margin="0,0,3,0"
								MouseLeftButtonDown='EmbeddedButton_MouseLeftButtonDown'
								MouseRightButtonUp='EmbeddedButton_MouseRightButtonDown'
								Background='{StaticResource EmbeddedButtonBackgroundBrush}'>
							<DockPanel VerticalAlignment='Center'>
								<TextBlock DockPanel.Dock='Left'
										   x:Name="EmbeddedButtonTextBlock"
										   Foreground="#555"
										   Text="{Binding DisplayName, UpdateSourceTrigger=PropertyChanged}">
										<TextBlock.ToolTip>
											<StackPanel>
												<TextBlock Text='{Binding Description, UpdateSourceTrigger=PropertyChanged}' />
												<TextBlock Text='{Binding ArgumentsExample, UpdateSourceTrigger=PropertyChanged}' />
											</StackPanel>
										</TextBlock.ToolTip>
									</TextBlock>
							</DockPanel>
						</Border>
						<Border DockPanel.Dock='Left'>
							<Border.Resources>
								<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
												 Color="Transparent" />
								<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
												 Color="Transparent" />
							</Border.Resources>
							<ListBox x:Name='EmbeddedListbox'
									 BorderThickness='0'
									 Background='Transparent'
									 ItemsSource='{Binding CurrentArguments, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}'>
								<ListBox.ItemsPanel>
									<ItemsPanelTemplate>
										<WrapPanel IsItemsHost="True" />
									</ItemsPanelTemplate>
								</ListBox.ItemsPanel>
								<ListBox.ItemTemplate>
									<DataTemplate>
										<Border x:Name='MainBorder'
												BorderBrush="#ccc"
												BorderThickness="1"
												CornerRadius="3"
												Padding="3,0,3,3"
												Margin="0,0,3,0"
												Opacity='0.7'
												Background='{StaticResource CommandListBoxItemMainBorderBackgroundBrush}'>
											<DockPanel>
												<DockPanel DockPanel.Dock='Top'
														   LastChildFill='True'
														   Background='Transparent'
														   Margin='0,3,0,0'>
													<Button DockPanel.Dock='Right'
															x:Name='ButtonClose'
															HorizontalAlignment='Right'
															VerticalAlignment='Center'
															Content='X'
															FontSize='12'
															Foreground='#300'
															BorderBrush='#333'
															PreviewMouseLeftButtonUp='ClearTextboxTextButton_MouseLeftButtonDown'>
														<Button.Template>
															<ControlTemplate TargetType='{x:Type Button}'>
																<Border x:Name='ButtonBorder'
																		CornerRadius='3'
																		BorderThickness='1'
																		BorderBrush='Transparent'
																		Background='Transparent'
																		Padding='2'>
																	<ContentPresenter Content='{TemplateBinding Content}'
																					  HorizontalAlignment='Center'
																					  VerticalAlignment='Center' />
																</Border>
																<ControlTemplate.Triggers>
																	<Trigger Property='IsMouseOver'
																			 Value='True'>
																		<Setter TargetName='ButtonBorder'
																				Property='Background'
																				Value='{StaticResource HoverBackground}' />
																		<Setter TargetName='ButtonBorder'
																				Property='BorderBrush'
																				Value='{StaticResource HoverBorderBrush}' />
																	</Trigger>
																	<Trigger Property='IsPressed'
																			 Value='True'>
																		<Setter TargetName='ButtonBorder'
																				Property='Background'
																				Value='{StaticResource PressedBackground}' />
																		<Setter TargetName='ButtonBorder'
																				Property='BorderBrush'
																				Value='{StaticResource PressedBorderBrush}' />
																	</Trigger>
																</ControlTemplate.Triggers>
															</ControlTemplate>
														</Button.Template>
													</Button>
													<input:AutoCompleteBox x:Name='ArgumentText'
																		   BorderThickness='0'
																		   MinimumPrefixLength='0'
																		   MinimumPopulateDelay='0'
																		   Background='{StaticResource CommandArgumentAutoCompleteBoxBackgroundBrush}'
																		   Text='{Binding CurrentValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}'
																		   Tag='{Binding DisplayName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}'
																		   ItemsSource='{Binding PredefinedAutocompleteList, UpdateSourceTrigger=PropertyChanged}'
																		   SelectionChanged='ArgumentText_SelectionChanged'
																		   HorizontalAlignment='Stretch'
																		   FontSize='20'
																		   GotFocus='ArgumentText_GotFocus'
																		   IsTextCompletionEnabled='True'
																		   PreviewKeyDown='AutoCompleteActualTextBox_PreviewKeyDown'
																		   AllowDrop='True'
																		   PreviewDragOver='ArgumentText_DragOver'
																		   PreviewDrop='ArgumentText_Drop'
																		   Width='auto'>
														<input:AutoCompleteBox.ContextMenu>
															<ContextMenu Background="White">
																<MenuItem Command="ApplicationCommands.Copy" />
																<MenuItem Command="ApplicationCommands.Cut" />
																<MenuItem Command="ApplicationCommands.Paste" />
															</ContextMenu>
														</input:AutoCompleteBox.ContextMenu>
														<input:AutoCompleteBox.ItemContainerStyle>
															<Style TargetType='ListBoxItem'>
																<Setter Property="Background"
																		Value='{StaticResource CommandArgumentAutoCompleteBoxDropdownItemBackground}' />
															</Style>
														</input:AutoCompleteBox.ItemContainerStyle>
														<input:AutoCompleteBox.ItemTemplate>
															<DataTemplate>
																<DockPanel LastChildFill='True'
																		   HorizontalAlignment='Stretch'>
																	<!--<Button DockPanel.Dock='Left'
																							Content='X' />-->
																	<TextBlock DockPanel.Dock='Right'
																			   Padding='3,0'
																			   FontSize='14'
																			   Foreground='{StaticResource CommandArgumentAutoCompleteBoxDropdownItemForeground}'
																			   Text="{Binding}"
																			   VerticalAlignment="Center" />
																</DockPanel>
															</DataTemplate>
														</input:AutoCompleteBox.ItemTemplate>
													</input:AutoCompleteBox>
												</DockPanel>
												<TextBlock DockPanel.Dock='Bottom'
														   Text='{Binding DisplayName}'
														   Foreground='#ddd'
														   HorizontalAlignment='Center'
														   FontSize='12' />
											</DockPanel>
										</Border>
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>
						</Border>
						<!--<Button x:Name='GoButton'
												DockPanel.Dock='Right'
												FontFamily="Marlett"
												Focusable='False'
												Foreground='#080'
												Opacity='0.3'
												FontSize="20"
												Content="4"
												Height='24'
												Padding='0'
												Background='Transparent'
												BorderBrush='Transparent'
												Click='GoButton_Click'>
									<Button.Triggers>
										<EventTrigger RoutedEvent='MouseEnter'>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty='Opacity'
																					 Duration='0:0:0.4'
																					 To='1' />
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
										<EventTrigger RoutedEvent='MouseLeave'>
											<BeginStoryboard>
												<Storyboard>
													<DoubleAnimation Storyboard.TargetProperty='Opacity'
																					 Duration='0:0:0.2'
																					 To='0.3' />
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
									</Button.Triggers>
								</Button>-->
						<!--<Border x:Name="EmbeddedButton2"
												DockPanel.Dock="Right"
												BorderBrush="#ccc"
												BorderThickness="1"
												CornerRadius="3"
												Padding="3,0,3,3"
												Margin="0,0,3,0"
												VerticalAlignment="Center">
									<Border.Background>
										<LinearGradientBrush StartPoint="0,0"
																				 EndPoint="0,1">
											<GradientStop Color="#222"
																		Offset="0" />
											<GradientStop Color="#000"
																		Offset="0.7" />
											<GradientStop Color="#101010"
																		Offset="1" />
										</LinearGradientBrush>
									</Border.Background>
									<TextBlock x:Name="EmbeddedButtonTextBlock2"
														 Foreground="#eee"
														 FontSize="12"><Run Text="Testing" /></TextBlock>
								</Border>-->
						<ScrollViewer x:Name="PART_ContentHost"
									  DockPanel.Dock="Right" />
					</DockPanel>
				</Border>
				<ControlTemplate.Triggers>
					<Trigger Property="IsEnabled"
							 Value="False">
						<Setter Property="Background"
								Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
								TargetName="Bd" />
						<Setter Property="Foreground"
								Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
					</Trigger>
					<Trigger Property="IsFocused"
							 Value="True">
						<Setter Property="BorderBrush"
								Value="#0BF" />
					</Trigger>
					<Trigger Property="Width"
							 Value="Auto">
						<Setter Property="MinWidth"
								Value="100" />
					</Trigger>
					<Trigger Property="Height"
							 Value="Auto">
						<Setter Property="MinHeight"
								Value="20" />
					</Trigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
			<ControlTemplate x:Key="TreeviewControlTemplate"
							 TargetType="{x:Type TreeView}">
				<Border x:Name="Bd"
						CornerRadius="5"
						Background="Transparent"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
					<ScrollViewer Focusable="True"
								  CanContentScroll="False"
								  Padding="4">
						<ItemsPresenter />
					</ScrollViewer>
				</Border>
			</ControlTemplate>
		</ResourceDictionary>
		<!--ControlTemplate Button style for inside Messages Richtextbox for commands-->
		<ResourceDictionary>
			<ControlTemplate TargetType='{x:Type Button}'
							 x:Key='paragraphStandOut'>
				<Border CornerRadius='3'
						Padding='3'
						Margin='3'
						x:Name='templatedBorder'>
					<Border.Background>
						<LinearGradientBrush StartPoint='0,0'
											 EndPoint='0,1'>
							<GradientStop Color='#777'
										  Offset='0' />
							<GradientStop Color='#555'
										  Offset='0.7' />
							<GradientStop Color='#444'
										  Offset='1' />
						</LinearGradientBrush>
					</Border.Background>
					<TextBlock Text='{TemplateBinding Content}'
							   Foreground='#fff' />
				</Border>
				<ControlTemplate.Triggers>
					<DataTrigger Binding="{Binding IsMouseOver, ElementName=templatedBorder}"
								 Value="True">
						<Setter Property="Background"
								TargetName="templatedBorder">
							<Setter.Value>
								<LinearGradientBrush StartPoint='0,0'
													 EndPoint='0,1'>
									<GradientStop Color='#9bd'
												  Offset='0' />
									<GradientStop Color='#79b'
												  Offset='0.7' />
									<GradientStop Color='#68a'
												  Offset='1' />
								</LinearGradientBrush>
							</Setter.Value>
						</Setter>
					</DataTrigger>
				</ControlTemplate.Triggers>
			</ControlTemplate>
		</ResourceDictionary>
		<!--Styles (button SemiTransparentUntilHover)-->
		<ResourceDictionary>
			<Style x:Key='ButtonStyleSemiTransparentUntilHover'
				   TargetType="{x:Type Button}">
				<!-- Default Values -->
				<Setter Property="Opacity"
						Value="0.1" />
				<Style.Triggers>
					<Trigger Property="IsMouseOver"
							 Value="True">
						<Setter Property="Button.Opacity"
								Value="1" />
					</Trigger>
				</Style.Triggers>
			</Style>
		</ResourceDictionary>
		<!--Style ScrollViewer and Scrollbars (nice thin gray scrollbars, vertical scrollbar on left and not right)-->
		<ResourceDictionary>
			<!-- All the following is required to Re-Style the ScrollViewer, see 
             http://msdn2.microsoft.com/en-us/library/aa970847(VS.85).aspx
             http://msdn2.microsoft.com/en-us/library/ms742173(VS.85).aspx
             for the default Stles that the ScrollViewer has out of the box
         -->
			<!-- Brushes used in Styling of ScrollViewer -->
			<SolidColorBrush x:Key="StandardBorderBrush"
							 Color="#888" />
			<SolidColorBrush x:Key="StandardBackgroundBrush"
							 Color="#FFF" />
			<SolidColorBrush x:Key="HoverBorderBrush"
							 Color="#DDD" />
			<SolidColorBrush x:Key="SelectedBackgroundBrush"
							 Color="Gray" />
			<SolidColorBrush x:Key="SelectedForegroundBrush"
							 Color="White" />
			<SolidColorBrush x:Key="DisabledForegroundBrush"
							 Color="#888" />
			<SolidColorBrush x:Key="NormalBrush"
							 Color="#888" />
			<SolidColorBrush x:Key="NormalBorderBrush"
							 Color="#888" />
			<SolidColorBrush x:Key="HorizontalNormalBrush"
							 Color="#888" />
			<SolidColorBrush x:Key="HorizontalNormalBorderBrush"
							 Color="#888" />
			<LinearGradientBrush x:Key="ListBoxBackgroundBrush"
								 StartPoint="0,0"
								 EndPoint="1,0.001">
				<GradientBrush.GradientStops>
					<GradientStopCollection>
						<GradientStop Color="White"
									  Offset="0.0" />
						<GradientStop Color="White"
									  Offset="0.6" />
						<GradientStop Color="#DDDDDD"
									  Offset="1.2" />
					</GradientStopCollection>
				</GradientBrush.GradientStops>
			</LinearGradientBrush>
			<LinearGradientBrush x:Key="StandardBrush"
								 StartPoint="0,0"
								 EndPoint="0,1">
				<GradientBrush.GradientStops>
					<GradientStopCollection>
						<GradientStop Color="#FFF"
									  Offset="0.0" />
						<GradientStop Color="#CCC"
									  Offset="1.0" />
					</GradientStopCollection>
				</GradientBrush.GradientStops>
			</LinearGradientBrush>
			<SolidColorBrush x:Key="GlyphBrush"
							 Color="#444" />
			<LinearGradientBrush x:Key="PressedBrush"
								 StartPoint="0,0"
								 EndPoint="0,1">
				<GradientBrush.GradientStops>
					<GradientStopCollection>
						<GradientStop Color="#BBB"
									  Offset="0.0" />
						<GradientStop Color="#EEE"
									  Offset="0.1" />
						<GradientStop Color="#EEE"
									  Offset="0.9" />
						<GradientStop Color="#FFF"
									  Offset="1.0" />
					</GradientStopCollection>
				</GradientBrush.GradientStops>
			</LinearGradientBrush>
			<!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
			<!--<Style x:Key="ScrollBarLineButton"
						 TargetType="{x:Type RepeatButton}">
				<Setter Property="SnapsToDevicePixels"
								Value="True" />
				<Setter Property="OverridesDefaultStyle"
								Value="true" />
				<Setter Property="Focusable"
								Value="false" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type RepeatButton}">
							<Border Name="Border"
											Margin="1"
											CornerRadius="2"
											Background="{StaticResource NormalBrush}"
											BorderBrush="{StaticResource NormalBorderBrush}"
											BorderThickness="1">
								<Path HorizontalAlignment="Center"
											VerticalAlignment="Center"
											Fill="{StaticResource GlyphBrush}"
											Data="{Binding Path=Content,
				RelativeSource={RelativeSource TemplatedParent}}" />
							</Border>
							<ControlTemplate.Triggers>
								<Trigger Property="IsPressed"
												 Value="true">
									<Setter TargetName="Border"
													Property="Background"
													Value="{StaticResource PressedBrush}" />
								</Trigger>
								<Trigger Property="IsEnabled"
												 Value="false">
									<Setter Property="Foreground"
													Value="{StaticResource DisabledForegroundBrush}" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>-->
			<!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
			<!--<Style x:Key="ScrollBarPageButton"
						 TargetType="{x:Type RepeatButton}">
				<Setter Property="SnapsToDevicePixels"
								Value="True" />
				<Setter Property="OverridesDefaultStyle"
								Value="true" />
				<Setter Property="IsTabStop"
								Value="false" />
				<Setter Property="Focusable"
								Value="false" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type RepeatButton}">
							<Border Background="Transparent" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>-->
			<!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
			<!--<Style x:Key="ScrollBarThumb"
						 TargetType="{x:Type Thumb}">
				<Setter Property="SnapsToDevicePixels"
								Value="True" />
				<Setter Property="OverridesDefaultStyle"
								Value="true" />
				<Setter Property="IsTabStop"
								Value="false" />
				<Setter Property="Focusable"
								Value="false" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Thumb}">
							<Border CornerRadius="2"
											Background="{TemplateBinding Background}"
											BorderBrush="{TemplateBinding BorderBrush}"
											BorderThickness="1" />
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>-->
			<!--<ControlTemplate x:Key="VerticalScrollBar"
											 TargetType="{x:Type ScrollBar}">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition MaxHeight="18" />
						<RowDefinition Height="0.00001*" />
						<RowDefinition MaxHeight="18" />
					</Grid.RowDefinitions>
					<Border Grid.RowSpan="3"
									CornerRadius="2"
									Background="#F0F0F0" />
					<RepeatButton Grid.Row="0"
												Style="{StaticResource ScrollBarLineButton}"
												Height="18"
												Command="ScrollBar.LineUpCommand"
												Content="M 0 4 L 8 4 L 4 0 Z" />
					<Track Name="PART_Track"
								 Grid.Row="1"
								 IsDirectionReversed="true">
						<Track.DecreaseRepeatButton>
							<RepeatButton Style="{StaticResource ScrollBarPageButton}"
														Command="ScrollBar.PageUpCommand" />
						</Track.DecreaseRepeatButton>
						<Track.Thumb>
							<Thumb Style="{StaticResource ScrollBarThumb}"
										 Margin="1,0,1,0"
										 Background="{StaticResource HorizontalNormalBrush}"
										 BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
						</Track.Thumb>
						<Track.IncreaseRepeatButton>
							<RepeatButton Style="{StaticResource ScrollBarPageButton}"
														Command="ScrollBar.PageDownCommand" />
						</Track.IncreaseRepeatButton>
					</Track>
					<RepeatButton Grid.Row="3"
												Style="{StaticResource ScrollBarLineButton}"
												Height="18"
												Command="ScrollBar.LineDownCommand"
												Content="M 0 0 L 4 4 L 8 0 Z" />
				</Grid>
			</ControlTemplate>-->
			<!-- HorizontalScrollBar Template using the previously created Templates -->
			<!--<ControlTemplate x:Key="HorizontalScrollBar"
											 TargetType="{x:Type ScrollBar}">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition MaxWidth="18" />
						<ColumnDefinition Width="0.00001*" />
						<ColumnDefinition MaxWidth="18" />
					</Grid.ColumnDefinitions>
					<Border Grid.ColumnSpan="3"
									CornerRadius="2"
									Background="#F0F0F0" />
					<RepeatButton Grid.Column="0"
												Style="{StaticResource ScrollBarLineButton}"
												Width="18"
												Command="ScrollBar.LineLeftCommand"
												Content="M 4 0 L 4 8 L 0 4 Z" />
					<Track Name="PART_Track"
								 Grid.Column="1"
								 IsDirectionReversed="False">
						<Track.DecreaseRepeatButton>
							<RepeatButton Style="{StaticResource ScrollBarPageButton}"
														Command="ScrollBar.PageLeftCommand" />
						</Track.DecreaseRepeatButton>
						<Track.Thumb>
							<Thumb Style="{StaticResource ScrollBarThumb}"
										 Margin="0,1,0,1"
										 Background="{StaticResource NormalBrush}"
										 BorderBrush="{StaticResource NormalBorderBrush}" />
						</Track.Thumb>
						<Track.IncreaseRepeatButton>
							<RepeatButton Style="{StaticResource ScrollBarPageButton}"
														Command="ScrollBar.PageRightCommand" />
						</Track.IncreaseRepeatButton>
					</Track>
					<RepeatButton Grid.Column="3"
												Style="{StaticResource ScrollBarLineButton}"
												Width="18"
												Command="ScrollBar.LineRightCommand"
												Content="M 0 0 L 4 4 L 0 8 Z" />
				</Grid>
			</ControlTemplate>-->
			<!-- Style for overall  ScrollBar -->
			<!--<Style x:Key="{x:Type ScrollBar}"
						 TargetType="{x:Type ScrollBar}">
				<Setter Property="SnapsToDevicePixels"
								Value="True" />
				<Setter Property="OverridesDefaultStyle"
								Value="true" />
				<Style.Triggers>
					<Trigger Property="Orientation"
									 Value="Horizontal">
						<Setter Property="Width"
										Value="Auto" />
						<Setter Property="Height"
										Value="10" />
						<Setter Property="Template"
										Value="{StaticResource HorizontalScrollBar}" />
					</Trigger>
					<Trigger Property="Orientation"
									 Value="Vertical">
						<Setter Property="Width"
										Value="10" />
						<Setter Property="Height"
										Value="Auto" />
						<Setter Property="Template"
										Value="{StaticResource VerticalScrollBar}" />
					</Trigger>
				</Style.Triggers>
			</Style>-->
			<!-- Style for overall  ScrollViewer -->
			<!--<Style TargetType="{x:Type ScrollViewer}">
				<Setter Property="OverridesDefaultStyle"
								Value="True" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollViewer}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<ScrollContentPresenter Grid.Column="1" />
								<ScrollBar Name="PART_VerticalScrollBar"
													 Value="{TemplateBinding VerticalOffset}"
													 Maximum="{TemplateBinding ScrollableHeight}"
													 ViewportSize="{TemplateBinding ViewportHeight}"
													 Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
								<ScrollBar Name="PART_HorizontalScrollBar"
													 Orientation="Horizontal"
													 Grid.Row="1"
													 Grid.Column="1"
													 Value="{TemplateBinding HorizontalOffset}"
													 Maximum="{TemplateBinding ScrollableWidth}"
													 ViewportSize="{TemplateBinding ViewportWidth}"
													 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>-->
		</ResourceDictionary>
	</ResourceDictionary.MergedDictionaries>
</ResourceDictionary>